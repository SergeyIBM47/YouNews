server.address=0.0.0.0
server.port=${PORT}

# DataSource settings: set here your own configurations for the database
# connection. In this example we have "test" as database name and
# "root" as username and password.
spring.datasource.url = ${JDBC_DATA_BASE_URL}
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.username = ${JDBC_DATA_BASE_USERNAME}
spring.datasource.password = ${JDBC_DATA_BASE_PASSWORD}

spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true
spring.resources.static-locations= classpath:/webapp/
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.DefaultNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect